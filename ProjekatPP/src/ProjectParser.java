
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Jan 17 20:39:44 CET 2022
//----------------------------------------------------

import java_cup.runtime.*;
import java.io.*;

/** CUP v0.10k generated parser.
  * @version Mon Jan 17 20:39:44 CET 2022
  */
public class ProjectParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public ProjectParser() {super();}

  /** Constructor which sets the default scanner. */
  public ProjectParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\052\000\002\003\006\000\002\002\004\000\002\004" +
    "\006\000\002\016\004\000\002\016\003\000\002\005\006" +
    "\000\002\007\005\000\002\007\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\014\004\000\002\014\003\000\002\013\007\000\002\013" +
    "\006\000\002\013\007\000\002\013\007\000\002\013\003" +
    "\000\002\015\005\000\002\015\003\000\002\010\005\000" +
    "\002\010\003\000\002\012\005\000\002\012\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\011\005" +
    "\000\002\011\005\000\002\011\003\000\002\021\005\000" +
    "\002\021\005\000\002\021\003\000\002\022\003\000\002" +
    "\022\003\000\002\022\005\000\002\017\005\000\002\017" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\120\000\004\004\005\001\002\000\004\002\122\001" +
    "\002\000\004\037\006\001\002\000\004\040\007\001\002" +
    "\000\004\041\010\001\002\000\004\031\012\001\002\000" +
    "\004\002\001\001\002\000\010\034\ufffa\035\ufffa\040\ufffa" +
    "\001\002\000\014\010\ufffd\011\ufffd\027\ufffd\031\ufffd\041" +
    "\ufffd\001\002\000\014\010\027\011\036\027\030\031\035" +
    "\041\010\001\002\000\006\034\017\035\016\001\002\000" +
    "\004\031\026\001\002\000\012\005\020\006\022\007\024" +
    "\026\023\001\002\000\004\033\ufff9\001\002\000\004\033" +
    "\025\001\002\000\004\033\ufff7\001\002\000\004\033\ufff6" +
    "\001\002\000\004\033\ufff8\001\002\000\014\010\ufffc\011" +
    "\ufffc\027\ufffc\031\ufffc\041\ufffc\001\002\000\010\034\ufffb" +
    "\035\ufffb\040\ufffb\001\002\000\004\037\116\001\002\000" +
    "\014\010\027\011\036\027\030\031\107\041\010\001\002" +
    "\000\020\010\uffef\011\uffef\027\uffef\030\uffef\031\uffef\041" +
    "\uffef\042\uffef\001\002\000\016\010\027\011\036\027\030" +
    "\031\107\041\010\042\111\001\002\000\014\010\ufffe\011" +
    "\ufffe\027\ufffe\031\ufffe\041\ufffe\001\002\000\020\010\ufff4" +
    "\011\ufff4\027\ufff4\030\ufff4\031\ufff4\041\ufff4\042\ufff4\001" +
    "\002\000\010\034\ufffa\035\ufffa\036\104\001\002\000\004" +
    "\037\037\001\002\000\010\031\045\032\051\037\044\001" +
    "\002\000\006\035\100\040\101\001\002\000\034\012\067" +
    "\013\070\016\064\017\073\020\071\021\074\022\066\023" +
    "\065\024\uffe9\025\uffe9\033\uffe9\035\uffe9\040\uffe9\001\002" +
    "\000\014\024\062\025\uffed\033\uffed\035\uffed\040\uffed\001" +
    "\002\000\010\025\060\035\uffd8\040\uffd8\001\002\000\010" +
    "\031\045\032\051\037\044\001\002\000\040\012\uffdc\013" +
    "\uffdc\014\uffdc\015\uffdc\016\uffdc\017\uffdc\020\uffdc\021\uffdc" +
    "\022\uffdc\023\uffdc\024\uffdc\025\uffdc\033\uffdc\035\uffdc\040" +
    "\uffdc\001\002\000\040\012\uffe0\013\uffe0\014\052\015\053" +
    "\016\uffe0\017\uffe0\020\uffe0\021\uffe0\022\uffe0\023\uffe0\024" +
    "\uffe0\025\uffe0\033\uffe0\035\uffe0\040\uffe0\001\002\000\040" +
    "\012\uffdd\013\uffdd\014\uffdd\015\uffdd\016\uffdd\017\uffdd\020" +
    "\uffdd\021\uffdd\022\uffdd\023\uffdd\024\uffdd\025\uffdd\033\uffdd" +
    "\035\uffdd\040\uffdd\001\002\000\014\024\uffeb\025\uffeb\033" +
    "\uffeb\035\uffeb\040\uffeb\001\002\000\040\012\uffdb\013\uffdb" +
    "\014\uffdb\015\uffdb\016\uffdb\017\uffdb\020\uffdb\021\uffdb\022" +
    "\uffdb\023\uffdb\024\uffdb\025\uffdb\033\uffdb\035\uffdb\040\uffdb" +
    "\001\002\000\010\031\045\032\051\037\044\001\002\000" +
    "\010\031\045\032\051\037\044\001\002\000\040\012\uffde" +
    "\013\uffde\014\uffde\015\uffde\016\uffde\017\uffde\020\uffde\021" +
    "\uffde\022\uffde\023\uffde\024\uffde\025\uffde\033\uffde\035\uffde" +
    "\040\uffde\001\002\000\040\012\uffdf\013\uffdf\014\uffdf\015" +
    "\uffdf\016\uffdf\017\uffdf\020\uffdf\021\uffdf\022\uffdf\023\uffdf" +
    "\024\uffdf\025\uffdf\033\uffdf\035\uffdf\040\uffdf\001\002\000" +
    "\006\025\060\040\057\001\002\000\040\012\uffda\013\uffda" +
    "\014\uffda\015\uffda\016\uffda\017\uffda\020\uffda\021\uffda\022" +
    "\uffda\023\uffda\024\uffda\025\uffda\033\uffda\035\uffda\040\uffda" +
    "\001\002\000\010\031\045\032\051\037\044\001\002\000" +
    "\014\024\062\025\uffee\033\uffee\035\uffee\040\uffee\001\002" +
    "\000\010\031\045\032\051\037\044\001\002\000\014\024" +
    "\uffec\025\uffec\033\uffec\035\uffec\040\uffec\001\002\000\010" +
    "\031\uffe4\032\uffe4\037\uffe4\001\002\000\010\031\uffe5\032" +
    "\uffe5\037\uffe5\001\002\000\010\031\uffe6\032\uffe6\037\uffe6" +
    "\001\002\000\010\031\045\032\051\037\044\001\002\000" +
    "\010\031\045\032\051\037\044\001\002\000\010\031\uffe3" +
    "\032\uffe3\037\uffe3\001\002\000\010\031\045\032\051\037" +
    "\044\001\002\000\010\031\uffe8\032\uffe8\037\uffe8\001\002" +
    "\000\010\031\uffe7\032\uffe7\037\uffe7\001\002\000\020\012" +
    "\067\013\070\024\uffea\025\uffea\033\uffea\035\uffea\040\uffea" +
    "\001\002\000\040\012\uffe1\013\uffe1\014\052\015\053\016" +
    "\uffe1\017\uffe1\020\uffe1\021\uffe1\022\uffe1\023\uffe1\024\uffe1" +
    "\025\uffe1\033\uffe1\035\uffe1\040\uffe1\001\002\000\040\012" +
    "\uffe2\013\uffe2\014\052\015\053\016\uffe2\017\uffe2\020\uffe2" +
    "\021\uffe2\022\uffe2\023\uffe2\024\uffe2\025\uffe2\033\uffe2\035" +
    "\uffe2\040\uffe2\001\002\000\010\031\045\032\051\037\044" +
    "\001\002\000\004\033\102\001\002\000\020\010\ufff0\011" +
    "\ufff0\027\ufff0\030\ufff0\031\ufff0\041\ufff0\042\ufff0\001\002" +
    "\000\010\025\060\035\uffd9\040\uffd9\001\002\000\010\031" +
    "\045\032\051\037\044\001\002\000\006\025\060\033\106" +
    "\001\002\000\020\010\ufff2\011\ufff2\027\ufff2\030\ufff2\031" +
    "\ufff2\041\ufff2\042\ufff2\001\002\000\004\036\104\001\002" +
    "\000\020\010\ufff5\011\ufff5\027\ufff5\030\ufff5\031\ufff5\041" +
    "\ufff5\042\ufff5\001\002\000\022\002\uffff\010\uffff\011\uffff" +
    "\027\uffff\030\uffff\031\uffff\041\uffff\042\uffff\001\002\000" +
    "\016\010\027\011\036\027\030\030\113\031\107\041\010" +
    "\001\002\000\010\031\045\032\051\037\044\001\002\000" +
    "\006\025\060\033\115\001\002\000\020\010\ufff3\011\ufff3" +
    "\027\ufff3\030\ufff3\031\ufff3\041\ufff3\042\ufff3\001\002\000" +
    "\004\031\012\001\002\000\006\035\016\040\120\001\002" +
    "\000\004\033\121\001\002\000\020\010\ufff1\011\ufff1\027" +
    "\ufff1\030\ufff1\031\ufff1\041\ufff1\042\ufff1\001\002\000\004" +
    "\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\120\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\010\001\001" +
    "\000\010\005\012\007\014\016\013\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\004\030" +
    "\005\032\007\014\013\033\014\031\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\020\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\004\030\013\033\014\111\001" +
    "\001\000\002\001\001\000\006\004\030\013\107\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\010\041\011\040\012\047\015\042" +
    "\017\037\021\045\022\046\001\001\000\002\001\001\000" +
    "\004\020\071\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\010\041\011\040\012\047\015\055\021\045\022" +
    "\046\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\022" +
    "\054\001\001\000\004\022\053\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\010\060\011\040\012\047\021\045\022\046\001\001" +
    "\000\002\001\001\000\012\011\040\012\062\021\045\022" +
    "\046\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\021\076\022\046\001" +
    "\001\000\006\021\075\022\046\001\001\000\002\001\001" +
    "\000\010\011\074\021\045\022\046\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\010\041\011\040\012\047\015" +
    "\102\021\045\022\046\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\010\041\011\040\012" +
    "\047\015\104\021\045\022\046\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\004\030\013\107\001\001\000\016" +
    "\010\041\011\040\012\047\015\113\021\045\022\046\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\116" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ProjectParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ProjectParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ProjectParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



   
   public static void main( String[] args ) {
      try {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new ProjectLexer( file );
		   ProjectParser parser = new ProjectParser( scanner );
		   parser.debug_parse();
	  }
	  catch( Exception e ) {
		   System.out.println(e);
	  }
   }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$ProjectParser$actions {
  private final ProjectParser parser;

  /** Constructor */
  CUP$ProjectParser$actions(ProjectParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$ProjectParser$do_action(
    int                        CUP$ProjectParser$act_num,
    java_cup.runtime.lr_parser CUP$ProjectParser$parser,
    java.util.Stack            CUP$ProjectParser$stack,
    int                        CUP$ProjectParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ProjectParser$result;

      /* select the action based on the action number */
      switch (CUP$ProjectParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ExpressionList ::= Expression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 41." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(13/*ExpressionList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ExpressionList ::= ExpressionList COMMA Expression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 40." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(13/*ExpressionList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Factor ::= LEFTPAR Expression RIGHTPAR 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 39." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(16/*Factor*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Factor ::= CONST 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 38." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(16/*Factor*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Factor ::= ID 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 37." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(16/*Factor*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Term ::= Factor 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 36." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(15/*Term*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Term ::= Term DIV Factor 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 35." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(15/*Term*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Term ::= Term MUL Factor 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 34." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(15/*Term*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ArExpression ::= Term 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 33." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(7/*ArExpression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ArExpression ::= ArExpression SUB Term 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 32." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(7/*ArExpression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ArExpression ::= ArExpression PLUS Term 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 31." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(7/*ArExpression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // RelOp ::= GREATEROREQUAL 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 30." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(14/*RelOp*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // RelOp ::= GREATER 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 29." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(14/*RelOp*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // RelOp ::= DIFFERENT 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 28." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(14/*RelOp*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // RelOp ::= EQUAL 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 27." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(14/*RelOp*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // RelOp ::= LESSOREQUAL 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 26." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(14/*RelOp*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // RelOp ::= LESS 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 25." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(14/*RelOp*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // RelExpression ::= ArExpression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 24." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(8/*RelExpression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // RelExpression ::= ArExpression RelOp ArExpression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 23." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(8/*RelExpression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // AndExpression ::= RelExpression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 22." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(6/*AndExpression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // AndExpression ::= AndExpression AND RelExpression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 21." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(6/*AndExpression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Expression ::= AndExpression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 20." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(11/*Expression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Expression ::= Expression OR AndExpression 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 19." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(11/*Expression*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Statement ::= Block 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 18." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Statement ::= WRITE LEFTPAR ExpressionList RIGHTPAR SEMI 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 17." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Statement ::= READ LEFTPAR NameList RIGHTPAR SEMI 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 16." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Statement ::= ID ASSIGN Expression SEMI 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 15." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Statement ::= REPEAT StatementList UNTIL Expression SEMI 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 14." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // StatementList ::= Statement 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 13." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(10/*StatementList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // StatementList ::= StatementList Statement 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 12." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(10/*StatementList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Type ::= BOOL 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 11." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(4/*Type*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Type ::= REAL 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 10." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(4/*Type*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Type ::= CHAR 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 9." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(4/*Type*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Type ::= INTEGER 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 8." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(4/*Type*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NameList ::= ID 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 7." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(5/*NameList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NameList ::= NameList COMMA ID 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 6." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(5/*NameList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // VarDecl ::= NameList DOTDOT Type SEMI 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 5." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(3/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // VarList ::= VarDecl 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 4." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(12/*VarList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // VarList ::= VarList VarDecl 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 3." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(12/*VarList*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Block ::= LEFTBRACE VarList StatementList RIGHTBRACE 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija 2." );
             
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(2/*Block*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-1)).value;
		RESULT = start_val;
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$ProjectParser$parser.done_parsing();
          return CUP$ProjectParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= MAIN LEFTPAR RIGHTPAR Block 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija 1." );
            
              CUP$ProjectParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$ProjectParser$stack.elementAt(CUP$ProjectParser$top-0)).right, RESULT);
            }
          return CUP$ProjectParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

